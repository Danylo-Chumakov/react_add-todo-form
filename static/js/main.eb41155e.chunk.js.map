{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","findUsersById","userId","usersFromServer","find","todosWithUsers","App","useState","setTodos","setTitle","titleError","setTitleError","userSelected","setUserSelected","userError","setUserError","action","method","onSubmit","e","preventDefault","trim","newTodo","Math","max","item","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb41155e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export interface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"User-Info\" href={`email: ${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { User, UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport interface Todo {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n  user?: User,\n}\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'Todo-Info': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo, TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"Todo-List\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/TodoInfo';\n\nfunction findUsersById(userId: number) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nconst todosWithUsers: Todo[] = todosFromServer.map(todo => (\n  { ...todo, user: findUsersById(todo.userId) }\n));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userSelected, setUserSelected] = useState('0');\n  const [userError, setUserError] = useState(false);\n\n  const reset = () => {\n    setTitle('');\n    setTitleError(false);\n    setUserSelected('0');\n    setUserError(false);\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (title.trim() === '') {\n      setTitleError(true);\n\n      return;\n    }\n\n    if (userSelected === '0') {\n      setUserError(true);\n\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: Math.max(...todos.map(item => item.id)) + 1,\n      title,\n      completed: false,\n      userId: +userSelected,\n      user: findUsersById(+userSelected),\n    };\n\n    setTodos([...todos, newTodo]);\n    reset();\n  };\n\n  const handleTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserSelected(e.target.value);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"#title\">Title:</label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n          {titleError && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"#user\">User:</label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"#user\"\n            value={userSelected}\n            onChange={handleUserSelect}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map((user) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}